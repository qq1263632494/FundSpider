{
  "version": 3,
  "file": "SuperSpider.js",
  "sourceRoot": "",
  "sources": [
    "SuperSpider.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;AAAA,MAAA,OAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,IAAA,EAAA,SAAA,EAAA,MAAA,EAAA;;EAAA,KAAA,GAAQ,OAAA,CAAQ,YAAR;;EACR,OAAA,GAAU,OAAA,CAAQ,SAAR;;EACV,SAAA,GAAY,OAAA,CAAQ,WAAR;;EACZ,EAAA,GAAK,OAAA,CAAQ,IAAR;;EACL,MAAA,GAAS,OAAA,CAAQ,SAAR;;EACT,iBAAA,GAAoB,OAAA,CAAQ,qBAAR;;EACpB,IAAA,GAAO,iBAAA,CAAkB;IACrB,aAAA,EAAc;MACV,iBAAA,EAAkB,IADR;MAEV,QAAA,EAAS,IAFC;MAGV,OAAA,EAAQ,CAHE;MAIV,IAAA,EAAK;IAJK;EADO,CAAlB;;EASP,GAAA,GAAM;;EACN,EAAA,GAAK,IAAI,MAAM,CAAC,QAAX,CAAoB,gCAApB;;EAEL,MAAA,GAAS,QAAA,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAA;WACL,EAAE,CAAC,SAAH,CAAa,QAAA,CAAA,CAAA;AACT,UAAA;MAAA,IAAA,GAAO,EAAE,CAAC,OAAH,CAAW,qCAAX;MACP,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,QAAA,CAAC,GAAD,CAAA,EAAA,CAArB;aACA,IAAI,CAAC,QAAL,CAAA;IAHS,CAAb;EADK;;EAMT,EAAE,CAAC,IAAH,CAAQ,yBAAR,EAAmC,MAAA,QAAA,CAAC,GAAD,EAAM,GAAN,CAAA;AAC/B,QAAA;IAAA,EAAA,GAAK,GAAG,CAAC;WACT,CAAA,MAAM,IAAI,CAAC,GAAL,CAAS,MAAA,QAAA,CAAC,QAAD,CAAA;AACX,UAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA;MAAA,IAAA,GAAO,CAAA,MAAM,QAAQ,CAAC,OAAT,CAAA,CAAN;MACP,GAAA,GAAM,CAAA,kCAAA,CAAA,CAAqC,EAArC,CAAwC,KAAxC;MACN,MAAM,IAAI,CAAC,IAAL,CAAU,GAAV;MACN,IAAA,GAAO,CAAA,MAAM,IAAI,CAAC,OAAL,CAAA,CAAN;MACP,MAAM,IAAI,CAAC,KAAL,CAAA;MACN,CAAA,GAAI,CAAA,MAAM,OAAO,CAAC,IAAR,CAAa,IAAb,CAAN;MACJ,KAAA,GAAQ,CAAA,CAAE,GAAF,CAAM,CAAC,QAAP,CAAA,CAAkB,CAAA,CAAA;aAC1B,CAAA,CAAE,KAAF,CAAQ,CAAC,QAAT,CAAA,CAAmB,CAAC,IAApB,CAAyB,QAAA,CAAC,GAAD,EAAM,GAAN,CAAA;AACrB,YAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA;QAAA,GAAA,GAAM,CAAA,CAAE,GAAF,CAAM,CAAC,QAAP,CAAA,EAAN;;QAEA,GAAA,GAAM,CAAA,CAAE,GAAI,CAAA,CAAA,CAAN,CAAS,CAAC,IAAV,CAAA,EAFN;;QAIA,KAAA,GAAQ,CAAA,CAAE,GAAI,CAAA,CAAA,CAAN,CAAS,CAAC,IAAV,CAAA,CAAiB,aAJzB;;QAMA,IAAA,GAAO,CAAA,CAAE,GAAI,CAAA,CAAA,CAAN,CAAS,CAAC,IAAV,CAAA;eACP,MAAA,CAAO,EAAP,EAAW,GAAX,EAAgB,KAAhB,EAAuB,IAAvB;MARqB,CAAzB;IARW,CAAT,CAAN;EAF+B,CAAnC;;EAxBA;;AAAA",
  "sourcesContent": [
    "iconv = require 'iconv-lite'\ncheerio = require 'cheerio'\npuppeteer = require 'puppeteer'\nfs = require 'fs'\nsqlite = require 'sqlite3'\ninitPuppeteerPool = require './puppeteer-pool.js'\npool = initPuppeteerPool {\n    puppeteerArgs:{\n        ignoreHTTPSErrors:true,\n        headless:true,\n        timeout:0,\n        pipe:true\n    }\n}\n\ntgt = 'table.w782.comm.lsjz'\ndb = new sqlite.Database '/home/wang/文档/database/data.db'\n\ninsert = (t, d, v, r)->\n    db.serialize ()->\n        stmt = db.prepare 'INSERT INTO info VALUES(?, ?, ?, ?)'\n        stmt.run t, d, v, r, (err)->\n        stmt.finalize()\n\ndb.each \"SELECT ticket FROM fund\", (err, row)->\n    tk = row.ticket\n    await pool.use (instance)->\n        page = await instance.newPage()\n        url = \"http://fundf10.eastmoney.com/jjjz_#{tk}.html\"\n        await page.goto url\n        html = await page.content()\n        await page.close()\n        $ = await cheerio.load html\n        tbody = $(tgt).children()[1]\n        $(tbody).children().each (ind, ele)->\n            tds = $(ele).children()\n                # 日期\n            day = $(tds[0]).text()\n                # 单位净值\n            value = $(tds[1]).text()[0..5]\n                # 日增长率\n            rate = $(tds[3]).text()\n            insert(tk, day, value, rate)\n                #if i is LIMIT_TIMES\n                    # pool.drain().then(() => pool.clear())"
  ]
}